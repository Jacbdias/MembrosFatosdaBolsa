generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(cuid())
  email               String    @unique
  firstName           String
  lastName            String
  avatar              String?
  password            String
  plan                Plan      @default(VIP)
  status              Status    @default(PENDING)
  hotmartCustomerId   String?
  emailVerified       DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  lastLogin           DateTime?
  
  hotmartData         HotmartData?
  purchases           Purchase[]

  @@map("users")
}

model HotmartData {
  id                String   @id @default(cuid())
  userId            String   @unique
  hotmartCustomerId String
  productId         String
  productName       String
  purchaseDate      DateTime
  expirationDate    DateTime?
  status            String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("hotmart_data")
}

model Purchase {
  id                    String   @id @default(cuid())
  userId                String
  hotmartTransactionId  String   @unique
  productId             String
  productName           String
  amount                Float
  status                PurchaseStatus
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("purchases")
}

enum Plan {
  VIP
  LITE
  RENDA_PASSIVA
  FIIS
  AMERICA
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
}

enum PurchaseStatus {
  PENDING
  COMPLETED
  CANCELED
  REFUNDED
}