const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function populateUsers() {
  try {
    console.log('üöÄ Criando usu√°rios de exemplo...');

    // Usu√°rio Admin
    const admin = await prisma.user.create({
      data: {
        firstName: 'Admin',
        lastName: 'Sistema',
        email: 'admin@fatosdobolsa.com',
        password: 'admin123',
        plan: 'ADMIN',
        status: 'ACTIVE',
        customPermissions: JSON.stringify(['small-caps', 'dividendos', 'recursos-dicas'])
      }
    });

    // Usu√°rios VIP
    const userVip = await prisma.user.create({
      data: {
        firstName: 'Jo√£o',
        lastName: 'Silva',
        email: 'joao.silva@email.com',
        password: 'senha123',
        plan: 'VIP',
        status: 'ACTIVE',
        expirationDate: new Date('2025-12-31'),
        customPermissions: JSON.stringify(['internacional-etfs', 'recursos-analise'])
      }
    });

    // Usu√°rio LITE
    const userLite = await prisma.user.create({
      data: {
        firstName: 'Maria',
        lastName: 'Santos',
        email: 'maria.santos@email.com',
        password: 'senha123',
        plan: 'LITE',
        status: 'ACTIVE',
        expirationDate: new Date('2025-06-30'),
        customPermissions: JSON.stringify(['dividendos'])
      }
    });

    // Usu√°rio FIIS
    const userFiis = await prisma.user.create({
      data: {
        firstName: 'Pedro',
        lastName: 'Costa',
        email: 'pedro.costa@email.com',
        password: 'senha123',
        plan: 'FIIS',
        status: 'ACTIVE',
        expirationDate: new Date('2025-09-15'),
        customPermissions: JSON.stringify(['fundos-imobiliarios', 'recursos-planilhas'])
      }
    });

    // Usu√°rio Projeto Am√©rica
    const userAmerica = await prisma.user.create({
      data: {
        firstName: 'Ana',
        lastName: 'Lima',
        email: 'ana.lima@email.com',
        password: 'senha123',
        plan: 'AMERICA',
        status: 'ACTIVE',
        expirationDate: new Date('2026-01-01'),
        customPermissions: JSON.stringify(['projeto-america', 'internacional-stocks'])
      }
    });

    // Usu√°rio Renda Passiva
    const userRenda = await prisma.user.create({
      data: {
        firstName: 'Carlos',
        lastName: 'Oliveira',
        email: 'carlos.oliveira@email.com',
        password: 'senha123',
        plan: 'RENDA_PASSIVA',
        status: 'ACTIVE',
        expirationDate: new Date('2025-08-20'),
        customPermissions: JSON.stringify(['dividendos', 'recursos-ebooks'])
      }
    });

    // Usu√°rio com status PENDING
    const userPending = await prisma.user.create({
      data: {
        firstName: 'Lucas',
        lastName: 'Fernandes',
        email: 'lucas.fernandes@email.com',
        password: 'senha123',
        plan: 'LITE',
        status: 'PENDING',
        customPermissions: JSON.stringify([])
      }
    });

    // Usu√°rio expirado
    const userExpired = await prisma.user.create({
      data: {
        firstName: 'Patricia',
        lastName: 'Rocha',
        email: 'patricia.rocha@email.com',
        password: 'senha123',
        plan: 'VIP',
        status: 'INACTIVE',
        expirationDate: new Date('2024-12-31'), // J√° expirado
        customPermissions: JSON.stringify(['small-caps'])
      }
    });

    // Criar algumas compras de exemplo
    const purchases = [
      {
        userId: userVip.id,
        amount: 497.00,
        productName: 'Close Friends VIP - Anual',
        status: 'COMPLETED',
        hotmartTransactionId: 'HP123456789'
      },
      {
        userId: userLite.id,
        amount: 197.00,
        productName: 'Close Friends LITE - Semestral',
        status: 'COMPLETED',
        hotmartTransactionId: 'HP987654321'
      },
      {
        userId: userFiis.id,
        amount: 297.00,
        productName: 'Projeto FIIs - Anual',
        status: 'COMPLETED',
        hotmartTransactionId: 'HP456789123'
      },
      {
        userId: userAmerica.id,
        amount: 397.00,
        productName: 'Projeto Am√©rica - Anual',
        status: 'COMPLETED',
        hotmartTransactionId: 'HP789123456'
      }
    ];

    for (const purchase of purchases) {
      await prisma.purchase.create({ data: purchase });
    }

    console.log('‚úÖ Usu√°rios e compras criados com sucesso!');
    console.log(`üë• Total: 8 usu√°rios`);
    console.log(`üí∞ Total: ${purchases.length} compras`);
    console.log('');
    console.log('üëë Admin: admin@fatosdobolsa.com');
    console.log('üìä VIP: joao.silva@email.com');
    console.log('‚≠ê LITE: maria.santos@email.com');
    console.log('üè¢ FIIS: pedro.costa@email.com');
    console.log('üá∫üá∏ AMERICA: ana.lima@email.com');
    console.log('üí∞ RENDA_PASSIVA: carlos.oliveira@email.com');
    console.log('‚è≥ PENDING: lucas.fernandes@email.com');
    console.log('üî¥ EXPIRADO: patricia.rocha@email.com');

  } catch (error) {
    console.error('‚ùå Erro ao criar usu√°rios:', error);
  } finally {
    await prisma.$disconnect();
  }
}

populateUsers();